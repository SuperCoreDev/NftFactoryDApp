/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleNFT, SimpleNFTInterface } from "../SimpleNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Transferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintNFTWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526729a2241af62c0000600955600a80546001600160a01b0319167321371fed647e89c811bb9efc9537603c7a9c207a17905568056bc75e2d63100000600b553480156200005057600080fd5b50604080518082018252600981526814da5b5c1b1953919560ba1b60208083019182528351808501909452600384526213919560ea1b9084015281519192916200009d9160009162000120565b508051620000b390600190602084019062000120565b5050506000620000c86200011c60201b60201c565b600780546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000203565b3390565b8280546200012e90620001c6565b90600052602060002090601f0160209004810192826200015257600085556200019d565b82601f106200016d57805160ff19168380011785556200019d565b828001600101855582156200019d579182015b828111156200019d57825182559160200191906001019062000180565b50620001ab929150620001af565b5090565b5b80821115620001ab5760008155600101620001b0565b600181811c90821680620001db57607f821691505b60208210811415620001fd57634e487b7160e01b600052602260045260246000fd5b50919050565b61182d80620002136000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610223578063b88d4fde14610236578063c87b56dd14610249578063e985e9c51461025c578063f2fde38b1461029857600080fd5b806370a08231146101ef578063715018a6146102025780638da5cb5b1461020a57806395d89b411461021b57600080fd5b8063095ea7b3116100e9578063095ea7b31461019957806323b872dd146101ae57806342842e0e146101c1578063552f6753146101d45780636352211e146101dc57600080fd5b8063010a38f51461011b57806301ffc9a71461013657806306fdde0314610159578063081812fc1461016e575b600080fd5b6101236102ab565b6040519081526020015b60405180910390f35b61014961014436600461151a565b6102bb565b604051901515815260200161012d565b61016161030d565b60405161012d9190611602565b61018161017c366004611552565b61039f565b6040516001600160a01b03909116815260200161012d565b6101ac6101a73660046114d5565b610439565b005b6101ac6101bc36600461138f565b61054f565b6101ac6101cf36600461138f565b610580565b6101ac61059b565b6101816101ea366004611552565b610652565b6101236101fd366004611343565b6106c9565b6101ac610750565b6007546001600160a01b0316610181565b6101616107f4565b6101ac61023136600461149f565b610803565b6101ac6102443660046113ca565b6108c8565b610161610257366004611552565b610900565b61014961026a36600461135d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102a6366004611343565b610a87565b60006102b660085490565b905090565b60006001600160e01b031982166380ac58cd60e01b14806102ec57506001600160e01b03198216635b5e139f60e01b145b8061030757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461031c90611727565b80601f016020809104026020016040519081016040528092919081815260200182805461034890611727565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661041d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061044482610652565b9050806001600160a01b0316836001600160a01b031614156104b25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610414565b336001600160a01b03821614806104ce57506104ce813361026a565b6105405760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610414565b61054a8383610ba2565b505050565b6105593382610c10565b6105755760405162461bcd60e51b815260040161041490611667565b61054a838383610d03565b61054a838383604051806020016040528060008152506108c8565b600a54600b546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156105f157600080fd5b505af1158015610605573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062991906114fe565b50610638600880546001019055565b600061064360085490565b905061064f3382610ea3565b50565b6000818152600260205260408120546001600160a01b0316806103075760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610414565b60006001600160a01b0382166107345760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610414565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146107aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610414565b6007546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600780546001600160a01b0319169055565b60606001805461031c90611727565b6001600160a01b03821633141561085c5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610414565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108d23383610c10565b6108ee5760405162461bcd60e51b815260040161041490611667565b6108fa84848484610fe5565b50505050565b6000818152600260205260409020546060906001600160a01b03166109815760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610414565b6000828152600660205260408120805461099a90611727565b80601f01602080910402602001604051908101604052809291908181526020018280546109c690611727565b8015610a135780601f106109e857610100808354040283529160200191610a13565b820191906000526020600020905b8154815290600101906020018083116109f657829003601f168201915b505050505090506000610a3160408051602081019091526000815290565b9050805160001415610a44575092915050565b815115610a76578082604051602001610a5e929190611596565b60405160208183030381529060405292505050919050565b610a7f84611018565b949350505050565b6007546001600160a01b03163314610ae15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610414565b6001600160a01b038116610b465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610414565b6007546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600780546001600160a01b0319166001600160a01b0392909216919091179055565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bd782610652565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610c895760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610414565b6000610c9483610652565b9050806001600160a01b0316846001600160a01b03161480610ccf5750836001600160a01b0316610cc48461039f565b6001600160a01b0316145b80610a7f57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610a7f565b826001600160a01b0316610d1682610652565b6001600160a01b031614610d7e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610414565b6001600160a01b038216610de05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610414565b610deb600082610ba2565b6001600160a01b0383166000908152600360205260408120805460019290610e149084906116e4565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e429084906116b8565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610ef95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610414565b6000818152600260205260409020546001600160a01b031615610f5e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610414565b6001600160a01b0382166000908152600360205260408120805460019290610f879084906116b8565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610ff0848484610d03565b610ffc84848484611100565b6108fa5760405162461bcd60e51b815260040161041490611615565b6000818152600260205260409020546060906001600160a01b03166110975760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610414565b60006110ae60408051602081019091526000815290565b905060008151116110ce57604051806020016040528060008152506110f9565b806110d88461120d565b6040516020016110e9929190611596565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561120257604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111449033908990889088906004016115c5565b602060405180830381600087803b15801561115e57600080fd5b505af192505050801561118e575060408051601f3d908101601f1916820190925261118b91810190611536565b60015b6111e8573d8080156111bc576040519150601f19603f3d011682016040523d82523d6000602084013e6111c1565b606091505b5080516111e05760405162461bcd60e51b815260040161041490611615565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a7f565b506001949350505050565b6060816112315750506040805180820190915260018152600360fc1b602082015290565b8160005b811561125b578061124581611762565b91506112549050600a836116d0565b9150611235565b60008167ffffffffffffffff81111561128457634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156112ae576020820181803683370190505b5090505b8415610a7f576112c36001836116e4565b91506112d0600a8661177d565b6112db9060306116b8565b60f81b8183815181106112fe57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611320600a866116d0565b94506112b2565b80356001600160a01b038116811461133e57600080fd5b919050565b600060208284031215611354578081fd5b6110f982611327565b6000806040838503121561136f578081fd5b61137883611327565b915061138660208401611327565b90509250929050565b6000806000606084860312156113a3578081fd5b6113ac84611327565b92506113ba60208501611327565b9150604084013590509250925092565b600080600080608085870312156113df578081fd5b6113e885611327565b93506113f660208601611327565b925060408501359150606085013567ffffffffffffffff80821115611419578283fd5b818701915087601f83011261142c578283fd5b81358181111561143e5761143e6117bd565b604051601f8201601f19908116603f01168101908382118183101715611466576114666117bd565b816040528281528a602084870101111561147e578586fd5b82602086016020830137918201602001949094529598949750929550505050565b600080604083850312156114b1578182fd5b6114ba83611327565b915060208301356114ca816117d3565b809150509250929050565b600080604083850312156114e7578182fd5b6114f083611327565b946020939093013593505050565b60006020828403121561150f578081fd5b81516110f9816117d3565b60006020828403121561152b578081fd5b81356110f9816117e1565b600060208284031215611547578081fd5b81516110f9816117e1565b600060208284031215611563578081fd5b5035919050565b600081518084526115828160208601602086016116fb565b601f01601f19169290920160200192915050565b600083516115a88184602088016116fb565b8351908301906115bc8183602088016116fb565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906115f89083018461156a565b9695505050505050565b6020815260006110f9602083018461156a565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156116cb576116cb611791565b500190565b6000826116df576116df6117a7565b500490565b6000828210156116f6576116f6611791565b500390565b60005b838110156117165781810151838201526020016116fe565b838111156108fa5750506000910152565b600181811c9082168061173b57607f821691505b6020821081141561175c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561177657611776611791565b5060010190565b60008261178c5761178c6117a7565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461064f57600080fd5b6001600160e01b03198116811461064f57600080fdfea2646970667358221220ab073d6d1ad8d0e46ad4853059da9c1a4f18d21619a9974b6437c9b7a779bced64736f6c63430008040033";

export class SimpleNFT__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleNFT> {
    return super.deploy(overrides || {}) as Promise<SimpleNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SimpleNFT {
    return super.attach(address) as SimpleNFT;
  }
  connect(signer: Signer): SimpleNFT__factory {
    return super.connect(signer) as SimpleNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleNFTInterface {
    return new utils.Interface(_abi) as SimpleNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleNFT {
    return new Contract(address, _abi, signerOrProvider) as SimpleNFT;
  }
}
